{"ast":null,"code":"var _jsxFileName = \"/Users/mue0012/dev/react-learning/streams/client/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream();\n  }\n\n  render() {\n    console.log(props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"StreamEdit\");\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/mue0012/dev/react-learning/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","Component","componentDidMount","props","render","console","log","mapStateToProps","state","ownProps","stream","streams","match","params","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX;AACD;;AACDK,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAPsC;;AASzC,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAGA,eAAehB,OAAO,CACpBS,eADoB,EAEpB;AAAER,EAAAA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream();\n  }\n  render() {\n    console.log(props);\n    return <div>StreamEdit</div>;\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\nexport default connect(\n  mapStateToProps,\n  { fetchStream }\n)(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}