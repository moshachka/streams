{"ast":null,"code":"var _jsxFileName = \"/Users/mue0012/dev/react-learning/streams/client/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { fetchStream } from \"../../actions\"; // React.Fragment is used instead of div as we still need to return one element\n// but we want at render time that div to not show , so the buttons can sit\n// directly in the modal actions area without parent div\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    console.log(this.props);\n\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n\n    return \"Are you sure you want to delete the stream with title: \".concat(this.props.stream.title);\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent,\n      actions: this.renderActions(),\n      onDismiss: () => {\n        history.push(\"/\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/mue0012/dev/react-learning/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","console","log","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;AACA;AACA;;AACA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,aAAa,GAAG;AACd,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAEDC,EAAAA,aAAa,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;;AACA,QAAI,CAAC,KAAKA,KAAL,CAAWQ,MAAhB,EAAwB;AACtB,aAAO,8CAAP;AACD;;AACD,4EAAiE,KAAKR,KAAL,CAAWQ,MAAX,CAAkBC,KAAnF;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE,KAAKL,aAFhB;AAGE,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAM;AACfT,QAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAhCwC;;AAmC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACb,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CACpBmB,eADoB,EAEpB;AAAEhB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,YAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { fetchStream } from \"../../actions\";\n\n// React.Fragment is used instead of div as we still need to return one element\n// but we want at render time that div to not show , so the buttons can sit\n// directly in the modal actions area without parent div\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  renderActions() {\n    return (\n      <React.Fragment>\n        <button className=\"ui button negative\">Delete</button>\n        <button className=\"ui button\">Cancel</button>\n      </React.Fragment>\n    );\n  }\n\n  renderContent() {\n    console.log(this.props);\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return (\n      <Modal\n        title=\"Delete Stream\"\n        content={this.renderContent}\n        actions={this.renderActions()}\n        onDismiss={() => {\n          history.push(\"/\");\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStream }\n)(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}