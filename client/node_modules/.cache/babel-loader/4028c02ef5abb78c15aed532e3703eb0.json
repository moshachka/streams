{"ast":null,"code":"import _defineProperty from \"/Users/mue0012/dev/react-learning/streams/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await streams.post(\"/streams\", _objectSpread({}, formValues, {\n      userId\n    }));\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    }); // do some programmatic navigation to\n    // get the user back to the root route\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(\"/streams/\".concat(id));\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const exitStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.put(\"/streams/\".concat(id), formValues);\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(\"/streams/\".concat(id));\n    dispatch({\n      type: DELETE_STREAM,\n      payload: id\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mue0012/dev/react-learning/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","exitStream","put","deleteStream","delete"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,WAPF,QAQO,SARP;AASA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC9B,SAAO;AAAEC,IAAAA,IAAI,EAAET,OAAR;AAAiBU,IAAAA,OAAO,EAAEF;AAA1B,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AAAEF,IAAAA,IAAI,EAAER;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI;AACxC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,UAC3BP,MAD2B,GAChBO,QAAQ,GAAGC,IADK,CAC3BR,MAD2B;AAEnC,UAAMS,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,IAAR,CAAa,UAAb,oBAA8BL,UAA9B;AAA0CL,MAAAA;AAA1C,OAAvB;AAEAM,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEP,aAAR;AAAuBQ,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,KAAD,CAAR,CAJmC,CAKnC;AACA;AACD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO,MAAMN,QAAN,IAAkB;AACvB,UAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,CAAY,UAAZ,CAAvB;AACAP,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEN,aAAR;AAAuBO,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMG,WAAW,GAAGC,EAAE,IAAI;AAC/B,SAAO,MAAMT,QAAN,IAAkB;AACvB,UAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,oBAAwBE,EAAxB,EAAvB;AACAT,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEL,YAAR;AAAsBM,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKV,UAAL,KAAoB;AAC5C,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAAC0B,GAAR,oBAAwBF,EAAxB,GAA8BV,UAA9B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEH,WAAR;AAAqBI,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMO,YAAY,GAAGH,EAAE,IAAI;AAChC,SAAO,MAAMT,QAAN,IAAkB;AACvB,UAAMf,OAAO,CAAC4B,MAAR,oBAA2BJ,EAA3B,EAAN;AACAT,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEJ,aAAR;AAAuBK,MAAAA,OAAO,EAAEa;AAAhC,KAAD,CAAR;AACD,GAHD;AAID,CALM","sourcesContent":["import streams from \"../apis/streams\";\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from \"./types\";\nexport const signIn = userId => {\n  return { type: SIGN_IN, payload: userId };\n};\n\nexport const signOut = () => {\n  return { type: SIGN_OUT };\n};\n\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post(\"/streams\", { ...formValues, userId });\n\n    dispatch({ type: CREATE_STREAM, payload: response.data });\n    // do some programmatic navigation to\n    // get the user back to the root route\n  };\n};\n\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n  };\n};\n\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n  };\n};\n\nexport const exitStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n  };\n};\n\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({ type: DELETE_STREAM, payload: id });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}